<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- Launch JAR files and images are hosted unprotected -->
	<http pattern="/repository/*/launch-resources/*.jar" security="none" />
	<http pattern="/repository/*/launch-resources/images/**" security="none" />

	<!-- unprotected static resources/urls -->
	<http pattern="/favicon.ico" security="none" />
	<http pattern="/login.jsf" security="none" />
	<http pattern="/images/**" security="none" />
	<http pattern="/*.css" security="none" />

	<!-- HTTP basic authentication for the repository RESTful services -->
	<http pattern="/repository/**" realm="DataCleaner monitor">
		<anonymous enabled="true" username="anonymous" />

		<intercept-url pattern="/repository/**" access="ROLE_USER" />

		<http-basic />
	</http>

	<!-- Form based authentication for the web pages -->
	<http auto-config="true" realm="DataCleaner monitor">
		<anonymous enabled="true" username="anonymous" />

		<intercept-url pattern="/**" access="ROLE_USER" />

		<form-login login-page="/login.jsf" authentication-failure-url="/login.jsf?error=true" login-processing-url="/j_spring_security_check"
			username-parameter="j_username" password-parameter="j_password"
			default-target-url="/index.html" />
		<logout logout-url="/logout" />
	</http>

	<global-method-security jsr250-annotations="enabled" />

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>
	
	<beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userService" />
		<beans:property name="authoritiesMapper" ref="authoritiesMapper" />
	</beans:bean>
	
	<user-service id="userService">
		<!-- demo tenant users -->
		<user name="viewer" password="viewer" authorities="ROLE_VIEWER" />
		<user name="developer" password="developer" authorities="ROLE_ENGINEER" />
		<user name="admin" password="admin" authorities="ROLE_ADMIN" />
	</user-service>

	<beans:bean id="authoritiesMapper"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyAuthoritiesMapper">
		<beans:constructor-arg ref="roleHierarchy" />
	</beans:bean>
	<beans:bean id="roleHierarchy"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<beans:property name="hierarchy">
			<beans:value>
				ROLE_GOD>ROLE_ADMIN
				ROLE_ADMIN>ROLE_ENGINEER
				ROLE_ADMIN>ROLE_SCHEDULE_EDITOR
				ROLE_ADMIN>ROLE_CONFIGURATION_EDITOR
				ROLE_ADMIN>ROLE_ATOMIC_EXECUTOR
				ROLE_CONFIGURATION_EDITOR>ROLE_TASK_QUERY
				ROLE_ENGINEER>ROLE_VIEWER
				ROLE_ENGINEER>ROLE_DASHBOARD_EDITOR
				ROLE_ENGINEER>ROLE_JOB_EDITOR
				ROLE_ENGINEER>ROLE_RESULT_EDITOR
				ROLE_VIEWER>ROLE_USER
				ROLE_SCHEDULE_EDITOR>ROLE_SLAVE_EXECUTOR
			</beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean name="tenantResolver" id="tenantResolver"
		class="org.eobjects.datacleaner.monitor.server.security.SingleTenantResolver">
		<beans:property name="tenantId" value="demo" />
	</beans:bean>

</beans:beans>